generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model pull_requests {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  thread_ts  String    @unique
  pr_id      String
}

model username_mappings {
  id              String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  github_username String    @unique
  slack_username  String    @unique
  team            String?   @db.Uuid
}

model slack_integration {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  access_token String?
  channel_id   String?
  team         String?   @db.Uuid
  channel_name String
}

model team {
  created_at         DateTime?           @default(now()) @db.Timestamptz(6)
  id                 String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name               String
  github_integration github_integration?
  users_and_teams    users_and_teams[]
}

model github_integration {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  team_id      String    @unique @db.Uuid
  access_token String
  team         team      @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id              String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at      DateTime?         @default(now()) @db.Timestamptz(6)
  users_and_teams users_and_teams[]
}

model users_and_teams {
  user                       String @db.Uuid
  team                       String @db.Uuid
  team_teamTousers_and_teams team   @relation(fields: [team], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users                      users  @relation(fields: [user], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([user, team])
}
