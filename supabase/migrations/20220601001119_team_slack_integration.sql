-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public.slack_integration
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    created_at timestamp with time zone DEFAULT now(),
    access_token text COLLATE pg_catalog."default",
    channel_id text COLLATE pg_catalog."default",
    team timestamp with time zone,
    CONSTRAINT slack_integration_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.slack_integration
    OWNER to postgres;

GRANT ALL ON TABLE public.slack_integration TO anon;

GRANT ALL ON TABLE public.slack_integration TO authenticated;

GRANT ALL ON TABLE public.slack_integration TO postgres;

GRANT ALL ON TABLE public.slack_integration TO service_role;

CREATE TABLE IF NOT EXISTS public.team
(
    created_at timestamp with time zone DEFAULT now(),
    "Name" text COLLATE pg_catalog."default",
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    CONSTRAINT team_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.team
    OWNER to postgres;

GRANT ALL ON TABLE public.team TO anon;

GRANT ALL ON TABLE public.team TO authenticated;

GRANT ALL ON TABLE public.team TO postgres;

GRANT ALL ON TABLE public.team TO service_role;

ALTER TABLE IF EXISTS public.username_mappings
    ADD COLUMN team uuid;
ALTER TABLE IF EXISTS public.username_mappings
    ADD CONSTRAINT username_mappings_github_username_key UNIQUE (github_username);
